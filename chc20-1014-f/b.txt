y antes    1    2    3    4 Endereco de y: 00BAFB0C
z antes    5    6    7    8 Endereco de z: 00BAFAF4

chamando test() com vetor y
Vetor 'testt' entrando em test():          1    2    3    4 Endereco de testt: 00BAFB0C
Vetor 'testt' saindo   de test():         -1   -2   -3   -4   -5   -6   -7   -8
Endereco de testt: 00BAF9D8
y em main() depois de test()   20   21   22   23 Endereco de y: 00BAFB0C

chamando test() com vetor z
Vetor 'testt' entrando em test():          5    6    7    8 Endereco de testt: 00BAFAF4
Vetor 'testt' saindo   de test():         -1   -2   -3   -4   -5   -6   -7   -8
Endereco de testt: 00BAF9D8

y depois   20   21   22   23
z depois   20   21   22   23

chamando test_2() (usando ponteiro) com vetor z
Vetor 'testt' entrando em test_2():       20   21   22   23 Endereco de testt: 00BAFAF4
Vetor 'testt' dentro  de  test_2():      -20  -19  -18  -17

chamando test_3() (usando int (*)[]) com vetor z
z antes  -20  -19  -18  -17 Endereco de z: 00BAFAF4
Vetor 'testt' entrando em test_3():      -20  -19  -18  -17 Endereco de testt: 00BAFAF4
Vetor 'testt'  saindo  de test_3():        3  -19  -18    4 Endereco de testt: 00BAFAF4

vetor 'p' na estrutura antes        9   10   11   12. Endereco: 00BAFADC
(passagem por valor)
vetor 'pct' entrando em test_st():          9   10   11   12 Endereco: 00BAF9FC
vetor 'pct'  saindo de  test_st():         15   16   17   18 Endereco: 00BAF9FC
vetor na estrutura em main() no retorno     9   10   11   12

Passando afinal a estrutura por referencia
(passagem por referencia)
vetor 'pct' entrando em test_st2():         9   10   11   12 Endereco: 00BAFADC
vetor 'pct' entrando em test_st2():        40   41   42   43
vetor na estrutura em main() no retorno    40   41   42   43
